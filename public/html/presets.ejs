<!doctype html>
<html lang="en">
  <head>
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <div class="container-fluid">
    <a class="navbar-brand" href="/">Noah's Test</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
      <div class="navbar-nav">
        <a class="nav-link active" aria-current="page" href="/">Home</a>
        <a class="nav-link" href="/presets">Presets</a>
        </div>
      </div>
    </div>
  </div>
</nav>
    <div class="p-2 mb-2 bg-light rounded-3">
      <div class="container-fluid py-5">
        <h1 class="display-1 text-center fw-bold">Relay Rest Presets</h1>
        <p class="col-md-20 fs-4 ">With Relay Rest Presets we can save our customers time, prevent common support request, and improve
            chances of smaller customers using our service. The goal of this project is to show a complex, yet
                simple to understand solution to a common support request. I hope this will bring in smaller customers
            by making the software extremely easy to get up and running.</p>
      </div>
    </div>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
      <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/style.css">
      <title>XML Presets</title>
</head>
<body>
<div class="container">
  <div class="row">
  <div class="form-group">
<form action="/presets_handle" method="POST">
    <label for="laml_box">Configuration Box</label>
    <textarea class="form-control" name = "laml_box_cox" id="laml_box_text" rows="12"><?xml version="1.0" encoding="UTF-8"?>
<Response>
</Response></textarea>
    <div class="dropdown d-flex container">
    <div class="col-md-12 align-items-center text-center my-2">
      <button class="btn btn-dark btn-lg dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
        Voice
      </button>
      <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownMenuButton1">
        <li><a class="dropdown-item" id="voice_forward">Voice Forwarding</a></li>
        <li><a class="dropdown-item" id="record">Recording Calls</a></li>
        <li><a class="dropdown-item" id="conference">Conference Call</a></li>
        <li><a class="dropdown-item" id="voice_mail">Simple Voicemail</a></li>
      </ul>

      <button class="btn btn-dark btn-lg dropdown-toggle " type="button" id="dropdownMenuButton2" data-bs-toggle="dropdown" aria-expanded="false">
        Messaging
      </button>
      <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownMenuButton3">
        <li><a class="dropdown-item" id="sms_simple">Respond with a SMS</a></li>
        <li><a class="dropdown-item" id="mms_simple">Respond with a MMS</a></li>
        <li><a class="dropdown-item" id="message_forward">Forward Messages</a></li>
      </ul>

      <button class="btn btn-dark btn-lg dropdown-toggle" type="button" id="dropdownMenuButton4" data-bs-toggle="dropdown" aria-expanded="false">
        Fax
      </button>
      <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownMenuButton5">
        <li><a class="dropdown-item" id="fax_receive">Receive Fax</a></li>
        <li><a class="dropdown-item" id="fax_image">Store a Fax's Image</a></li>
      </ul>

      <button class="btn btn-danger btn-lg dropdown-toggle" type="button" id="dropdownMenuButton8" data-bs-toggle="dropdown" aria-expanded="false">
        Documentation & Help!
      </button>
      <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownMenuButton9">
        <li><a class="dropdown-item" href="https://developer.signalwire.com/compatibility-api/reference/xml-overview" target="_blank">Relay Rest Documentation</a></li>
        <li><a class="dropdown-item" href="https://developer.signalwire.com/apis/docs" target="_blank">SignalWire Guides</a></li>
        <li><a class="dropdown-item" href="https://noah-space.signalwire.com/support_tickets/new" target="_blank">Support Help!</a></li>
      </ul>
     </div>
    </div>
            <div class="row g-1">
      <div class="col-md">
        <div class="form-floating">
          <input type="text" class="form-control" name="name" id="floatingInputGrid1" placeholder="My bins name!" autocomplete="off">
          <label for="floatingInputGrid">Name your XML bin</label>

        </div>
      </div>
      <div class="col-md">
        <div class="form-floating">
            <input type="text" class="form-control" name="sig_phone" id="myInput" list="numbers_preselect" autocomplete="off">
          <label for="floatingInputGrid">Enter your SignalWire number this bin will be applied to</label>
            <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>

            <script>
              let numbers_EJS = <%- JSON.stringify(numbers) %>;
              console.log(numbers_EJS)

              function autocomplete(inp, arr) {
  /*the autocomplete function takes two arguments,
  the text field element and an array of possible autocompleted values:*/
  var currentFocus;
  /*execute a function when someone writes in the text field:*/
  inp.addEventListener("input", function(e) {
      var a, b, i, val = this.value;
      /*close any already open lists of autocompleted values*/
      closeAllLists();
      if (!val) { return false;}
      currentFocus = -1;
      /*create a DIV element that will contain the items (values):*/
      a = document.createElement("DIV");
      a.setAttribute("id", this.id + "autocomplete-list");
      a.setAttribute("class", "autocomplete-items");
      /*append the DIV element as a child of the autocomplete container:*/
      this.parentNode.appendChild(a);
      /*for each item in the array...*/
      for (i = 0; i < arr.length; i++) {
        /*check if the item starts with the same letters as the text field value:*/
        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
          /*create a DIV element for each matching element:*/
          b = document.createElement("DIV");
          /*make the matching letters bold:*/
          b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
          b.innerHTML += arr[i].substr(val.length);
          /*insert a input field that will hold the current array item's value:*/
          b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
          /*execute a function when someone clicks on the item value (DIV element):*/
              b.addEventListener("click", function(e) {
              /*insert the value for the autocomplete text field:*/
              inp.value = this.getElementsByTagName("input")[0].value;
              /*close the list of autocompleted values,
              (or any other open lists of autocompleted values:*/
              closeAllLists();
          });
          a.appendChild(b);
        }
      }
  });
  /*execute a function presses a key on the keyboard:*/
  inp.addEventListener("keydown", function(e) {
      var x = document.getElementById(this.id + "autocomplete-list");
      if (x) x = x.getElementsByTagName("div");
      if (e.keyCode == 40) {
        /*If the arrow DOWN key is pressed,
        increase the currentFocus variable:*/
        currentFocus++;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 38) { //up
        /*If the arrow UP key is pressed,
        decrease the currentFocus variable:*/
        currentFocus--;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 13) {
        /*If the ENTER key is pressed, prevent the form from being submitted,*/
        e.preventDefault();
        if (currentFocus > -1) {
          /*and simulate a click on the "active" item:*/
          if (x) x[currentFocus].click();
        }
      }
  });
  function addActive(x) {
    /*a function to classify an item as "active":*/
    if (!x) return false;
    /*start by removing the "active" class on all items:*/
    removeActive(x);
    if (currentFocus >= x.length) currentFocus = 0;
    if (currentFocus < 0) currentFocus = (x.length - 1);
    /*add class "autocomplete-active":*/
    x[currentFocus].classList.add("autocomplete-active");
  }
  function removeActive(x) {
    /*a function to remove the "active" class from all autocomplete items:*/
    for (var i = 0; i < x.length; i++) {
      x[i].classList.remove("autocomplete-active");
    }
  }
  function closeAllLists(elmnt) {
    /*close all autocomplete lists in the document,
    except the one passed as an argument:*/
    var x = document.getElementsByClassName("autocomplete-items");
    for (var i = 0; i < x.length; i++) {
      if (elmnt != x[i] && elmnt != inp) {
      x[i].parentNode.removeChild(x[i]);
    }
  }
}
/*execute a function when someone clicks in the document:*/
document.addEventListener("click", function (e) {
    closeAllLists(e.target);
});
}

autocomplete(document.getElementById("myInput"), numbers_EJS);

          </script>
        </div>
      </div>
    </div>
    <input type="hidden" id="mode_select" name="mode_select" value="">
    <div class="d-grid gap-2 col-6 mx-auto my-2">
    <button class="btn btn-dark btn-lg" type="submit">Submit your bin</button>
    </div>
    </div>
    </div>
    </form>
    </div>
    </body>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js" integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.min.js" integrity="sha384-IDwe1+LCz02ROU9k972gdyvl+AESN10+x7tBKgc9I5HFtuNz0wWnPclzo6p9vxnk" crossorigin="anonymous"></script>
    <script src="/js/laml_presets_handle.js"></script>
</html>